trigger:
  batch: true
  branches:
    include:
      - main
    exclude:
      - feature/*
      - bugfix/*
  paths:
    include:
      - backend
    exclude:
      - web

resources:
  - repo: self

variables:
  dockerRegistryServiceConnection: "f15b7092-d3ed-4681-afb3-de6f4cceeb68"
  tag: "$(Build.BuildId)"
  sqlConnection: "$(VAR_SQLCONNECTION)"
  mongoConnection: "$(VAR_MONGOCONNECTION)"
  stripeApiKey: "$(VAR_STRIPEAPIKEY)"
  openAiApiKey: "$(VAR_OPENAIAPIKEY)"
  jwtSecret: "$(VAR_JWTSECRET)"
  azureLogStorageConnection: "$(VAR_AZURELOGSTORAGECONNECTION)"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: BuildAndPush
    displayName: Build and push docker image to ACR
    jobs:
      - job: Build
        displayName: Build and push docker image to ACR
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build docker image
            inputs:
              repository: "apicopyzilla"
              containerRegistry: $(dockerRegistryServiceConnection)
              command: "build"
              Dockerfile: "$(Build.SourcesDirectory)/backend/CopyZillaBackend/Dockerfile"
              arguments: '--build-arg SQLCONNECTION="${{variables.sqlConnection}}" --build-arg MONGOCONNECTION="${{variables.mongoConnection}}" --build-arg STRIPEAPIKEY="${{variables.stripeApiKey}}" --build-arg OPENAIAPIKEY="${{variables.openAiApiKey}}" --build-arg JWTSECRET="${{variables.jwtSecret}}" --build-arg AZURELOGSTORAGECONNECTION="${{variables.azureLogStorageConnection}}"'
              tags: |
                $(tag)
          - task: Docker@2
            displayName: "Push docker image to ACR"
            inputs:
              repository: "apicopyzilla"
              containerRegistry: $(dockerRegistryServiceConnection)
              command: "push"
              tags: |
                $(tag)
